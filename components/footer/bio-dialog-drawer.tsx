"use client";

import { useState } from "react";
import { Users } from "lucide-react";
import { useMediaQuery } from "@/hooks/use-media-query";
import {
  Drawer,
  DrawerContent,
  DrawerDescription,
  DrawerHeader,
  DrawerTitle,
  DrawerTrigger,
} from "@/components/ui/drawer";
import { Tooltip, TooltipContent, TooltipProvider, TooltipTrigger } from "@/components/ui/tooltip";
import { Dialog, DialogContent, DialogTrigger } from "@/components/ui/dialog";
import { ScrollArea } from "@/components/ui/scroll-area";
import { Button } from "@/components/ui/button";

const DescriptionContent = () => {
  return (
    <>
      Ch√†o m·ª´ng ƒë·∫øn v·ªõi ·ª©ng d·ª•ng h·ªçc t·∫≠p th√¥ng minh! ƒê√¢y l√† m·ªôt trong nh·ªØng c√¥ng c·ª• ƒë·∫∑c bi·ªát gi√∫p b·∫°n d·ªÖ d√†ng{" "}
      <span className="text-pink-600 font-bold">TRA ƒê·ªòNG T·ª™ B·∫§T QUY T·∫ÆC</span> trong ti·∫øng Anh. V·ªõi giao di·ªán th√¢n thi·ªán
      v√† c√°c t√≠nh nƒÉng hi·ªán ƒë·∫°i, ·ª©ng d·ª•ng s·∫Ω l√† ng∆∞·ªùi b·∫°n ƒë·ªìng h√†nh ƒë·∫Øc l·ª±c tr√™n h√†nh tr√¨nh chinh ph·ª•c ng√¥n ng·ªØ c·ªßa b·∫°n.
    </>
  );
};

const Content = () => {
  return (
    <ScrollArea className="h-full">
      <div className="grid gap-4 px-0">
        <ul className="list-disc">
          <span className="font-bold text-blue-600">Nh√≥m t√°c gi·∫£:</span>
          <li className="ml-5 text-pink-600">Hu·ª≥nh Th·ªã Di·ªÖm Nh∆∞</li>
          <li className="ml-5 text-pink-600">Hu·ª≥nh Ng·ªçc Kh√°nh Vy</li>
        </ul>
        <ul className="font-bold list-decimal">
          <span className="text-blue-600">C√°c t√≠nh nƒÉng ch√≠nh:</span>
          <li className="ml-5 font-normal">
            <span className="text-blue-600">Tra c·ª©u:</span> V·ªõi giao di·ªán ƒë·∫πp m·∫Øt, th√¢n thi·ªán v·ªõi ng∆∞·ªùi s·ª≠ d·ª•ng b√™n c·∫°nh
            c√°c ƒë·ªông t·ª´ ƒë∆∞·ª£c nh√≥m theo ch·ªØ c√°i, b·∫°n c√≥ th·ªÉ d·ªÖ d√†ng t√¨m ki·∫øm c√°c t·ª´ v·ª±ng th√¥ng qua c√¥ng c·ª• l·ªçc d·ªØ li·ªáu
            ƒë∆∞·ª£c t√≠ch h·ª£p s·∫µn, gi√∫p vi·ªác tra c·ª©u tr·ªü n√™n nhanh ch√≥ng, d·ªÖ d√†ng v√† hi·ªáu qu·∫£ h∆°n.
          </li>
          <li className="ml-5 font-normal">
            <span className="text-blue-600">Luy·ªán ph√°t √¢m:</span> H·ªá th·ªëng h·ªó tr·ª£ nghe v√† luy·ªán ph√°t √¢m chu·∫©n x√°c, gi√∫p
            b·∫°n t·ª± tin h∆°n trong giao ti·∫øp h√†ng ng√†y.
          </li>
          <li className="ml-5 font-normal">
            <ul className="list-disc">
              <span className="text-blue-600">Tr·ª£ l√Ω AI th√¥ng minh:</span>
              <li className="ml-5 font-normal">
                <span className="underline underline-offset-4">V√≠ d·ª• minh h·ªça</span>: Kh√¥ng ch·ªâ ƒë∆°n thu·∫ßn ƒë∆∞a ra ƒë·ªãnh
                nghƒ©a, c√¥ng c·ª• t·ª± ƒë·ªông cung c·∫•p c√°c v√≠ d·ª• sinh ƒë·ªông v√† th·ª±c t·∫ø, ƒë∆∞·ª£c t·∫°o ra b·ªüi c√¥ng ngh·ªá AI hi·ªán ƒë·∫°i.
                ƒêi·ªÅu n√†y gi√∫p ng∆∞·ªùi h·ªçc hi·ªÉu r√µ h∆°n c√°ch s·ª≠ d·ª•ng t·ª´ v·ª±ng v√† c·∫•u tr√∫c ng·ªØ ph√°p trong ng·ªØ c·∫£nh c·ª• th·ªÉ.
              </li>
              <li className="ml-5 font-normal">
                <span className="underline underline-offset-4">Gi·∫£i th√≠ch chi ti·∫øt v·ªÅ t·ª´ v√† ng·ªØ ph√°p</span>: C√¥ng c·ª•
                kh√¥ng ch·ªâ ƒë∆°n thu·∫ßn d·ªãch nghƒ©a m√† c√≤n ph√¢n t√≠ch s√¢u v·ªÅ c·∫•u tr√∫c c√¢u, c√°ch s·ª≠ d·ª•ng t·ª´ v√† c√°c s·∫Øc th√°i √Ω
                nghƒ©a kh√°c nhau. ƒêi·ªÅu n√†y gi√∫p ng∆∞·ªùi h·ªçc hi·ªÉu b·∫£n ch·∫•t c·ªßa ng√¥n ng·ªØ, t·ª´ ƒë√≥ ghi nh·ªõ ki·∫øn th·ª©c m·ªôt c√°ch
                s√¢u s·∫Øc v√† l√¢u d√†i h∆°n.
              </li>
              <li className="ml-5 font-normal">
                <span className="underline underline-offset-4">Luy·ªán t·∫≠p tr·∫Øc nghi·ªám ƒëa d·∫°ng</span>: C√¥ng c·ª• ƒë∆∞a ra m·ªôt
                lo·∫°t c√°c c√¢u h·ªèi tr·∫Øc nghi·ªám ƒë∆∞·ª£c thi·∫øt k·∫ø khoa h·ªçc, bao g·ªìm nhi·ªÅu ch·ªß ƒë·ªÅ. Sau m·ªói c√¢u tr·∫£ l·ªùi, ng∆∞·ªùi
                h·ªçc s·∫Ω nh·∫≠n ƒë∆∞·ª£c ph·∫£n h·ªìi ngay l·∫≠p t·ª©c v·ªÅ k·∫øt qu·∫£ v√† gi·∫£i th√≠ch chi ti·∫øt cho t·ª´ng c√¢u h·ªèi, gi√∫p h·ªç hi·ªÉu
                r√µ l·ªói sai v√† c·ªßng c·ªë ki·∫øn th·ª©c.
              </li>
              <li className="ml-5 font-normal">
                <span className="underline underline-offset-4">Luy·ªán vi·∫øt c√¢u ho√†n ch·ªânh</span>: T√≠nh nƒÉng n√†y h·ªó tr·ª£
                ng∆∞·ªùi h·ªçc luy·ªán vi·∫øt c√¢u ho√†n ch·ªânh v·ªõi ƒë·ªông t·ª´ cho tr∆∞·ªõc. H·ªá th·ªëng s·∫Ω t·ª± ƒë·ªông ki·ªÉm tra ng·ªØ ph√°p, ph√°t
                hi·ªán v√† ch·ªânh s·ª≠a l·ªói sai, ƒë·ªìng th·ªùi ƒë∆∞a ra g·ª£i √Ω ƒë·ªÉ c√¢u vƒÉn tr·ªü n√™n t·ªëi ∆∞u h∆°n. ƒê·∫∑c bi·ªát, h·ªá th·ªëng c√≤n
                ƒë√°nh gi√° v√† ch·∫•m ƒëi·ªÉm d·ª±a tr√™n nhi·ªÅu ti√™u ch√≠, gi√∫p ng∆∞·ªùi h·ªçc theo d√µi s·ª± ti·∫øn b·ªô c·ªßa m√¨nh.
              </li>
              <li className="ml-5 font-normal">
                <span className="underline underline-offset-4">H·ªèi ƒë√°p (Q&A) kh√¥ng gi·ªõi h·∫°n</span>: ƒê√¢y l√† m·ªôt t√≠nh nƒÉng
                m·∫°nh m·∫Ω cho ph√©p ng∆∞·ªùi h·ªçc ƒë·∫∑t b·∫•t k·ª≥ c√¢u h·ªèi n√†o li√™n quan ƒë·∫øn ti·∫øng Anh, t·ª´ ng·ªØ ph√°p, t·ª´ v·ª±ng, ph√°t √¢m
                v√† c√°c kh√≠a c·∫°nh kh√°c c·ªßa ng√¥n ng·ªØ. C√¥ng c·ª• s·∫Ω t·∫≠n d·ª•ng kh·∫£ nƒÉng c·ªßa Gemini ƒë·ªÉ cung c·∫•p c√¢u tr·∫£ l·ªùi
                ch√≠nh x√°c, ƒë·∫ßy ƒë·ªß v√† d·ªÖ hi·ªÉu.
              </li>
            </ul>
          </li>
          <li className="ml-5 font-normal">
            <span className="text-blue-600">H·ªó tr·ª£ In ·∫•n:</span> D·ªÖ d√†ng c√≥ ƒë∆∞·ª£c m·ªôt phi√™n b·∫£n tr√™n gi·∫•y ch·ªâ v·ªõi m·ªôt c√∫
            nh·∫•p chu·ªôt, gi√∫p l∆∞u tr·ªØ v√† ti·ªán l·ª£i khi s·ª≠ d·ª•ng.
          </li>
        </ul>
        <div>Nh√≥m xin g·ª≠i l·ªùi c·∫£m ∆°n ch√¢n th√†nh ƒë·∫øn c√°c b·∫°n ƒë√£ ƒë√°nh gi√° v√† g√≥p √Ω cho d·ª± √°n n√†y! üòä</div>
      </div>
    </ScrollArea>
  );
};

export function BioDialogDrawer() {
  const [open, setOpen] = useState(false);
  const isDesktop = useMediaQuery("(min-width: 768px)");

  if (isDesktop) {
    return (
      <Dialog open={open} onOpenChange={setOpen}>
        <DialogTrigger>
          <TooltipProvider>
            <Tooltip>
              <TooltipTrigger asChild>
                <Button className="size-8 p-1.5" variant="outline" asChild>
                  <Users size={20} />
                </Button>
              </TooltipTrigger>
              <TooltipContent>
                <p>Gi·ªõi thi·ªáu</p>
              </TooltipContent>
            </Tooltip>
          </TooltipProvider>
        </DialogTrigger>
        <DialogContent className="max-w-2xl h-[90%] p-4 sm:max-w-[full]">
          <DrawerHeader className="flex flex-col gap-0 p-0">
            <DrawerTitle className="text-pink-600 text-lg font-bold text-center tracking-tight">GI·ªöI THI·ªÜU</DrawerTitle>
            <DrawerDescription className="mb-0">
              <DescriptionContent />
            </DrawerDescription>
          </DrawerHeader>
          <Content />
        </DialogContent>
      </Dialog>
    );
  }

  return (
    <Drawer open={open} onOpenChange={setOpen}>
      <DrawerTrigger>
        <TooltipProvider>
          <Tooltip>
            <TooltipTrigger asChild>
              <Button className="size-8 p-1.5" variant="outline" asChild>
                <Users size={20} />
              </Button>
            </TooltipTrigger>
            <TooltipContent>
              <p>Gi·ªõi thi·ªáu</p>
            </TooltipContent>
          </Tooltip>
        </TooltipProvider>
      </DrawerTrigger>
      <DrawerContent className="h-full px-4 pb-4">
        <DrawerHeader className="flex flex-col gap-0 -mx-4 text-left">
          <DrawerTitle className="text-pink-600 text-lg font-bold text-center tracking-tight">GI·ªöI THI·ªÜU</DrawerTitle>
          <DrawerDescription className="mb-0 px-[-124px]">
            <DescriptionContent />
          </DrawerDescription>
        </DrawerHeader>
        <Content />
      </DrawerContent>
    </Drawer>
  );
}
